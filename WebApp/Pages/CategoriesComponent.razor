@page "/categories"

@inject NavigationManager NavigationManager
@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IDeleteCategoryUseCase DeleteCategoryUseCase


<h3>Manage Categories</h3>


@if (categories != null)
{
    <table class="table">
        <thead>
            <tr>

                <th>
                    Name
                </th>
                <th>
                    DESCRIPTION
                </th>
                <th></th>  
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
            <tr>
                <td>@category.Name</td>
                <td>@category.Description</td>
                <td><button type="button" @onclick="@(()=>EditCategory(category))" class="btn btn-link">Edit</button></td>
                <td><button type="button" @onclick="@(()=>DeleteCategory(category.CategoryId))" class="btn btn-link">Remove</button></td>
            </tr>
            }
        </tbody>


    </table>
}
<button type="button" @onclick="OnClickAddCategory" class="btn-primary">Add Category</button>

@code {

    private List<Category> categories;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        LoadCategory();
    }

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addCategory");
    }

    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editCategory/{category.CategoryId}");
    }

    private void DeleteCategory(int category)
    {
        DeleteCategoryUseCase.Execute(category);
        LoadCategory();
    }

    private void LoadCategory()
    {
        categories = ViewCategoriesUseCase.Execute()?.ToList();
    }
}
